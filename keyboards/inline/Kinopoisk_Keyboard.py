from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from telegram_bot_pagination import InlineKeyboardPaginator
from loader import bot
from model.UserForKinopoisk import Movie


def menu_main() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = InlineKeyboardMarkup(row_width=2)

    button_1 = InlineKeyboardButton(
        text="üéû –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é üéû", callback_data="movie_search"
    )
    button_2 = InlineKeyboardButton(text="üìâ –ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É üìâ", callback_data="rating")
    button_3 = InlineKeyboardButton(
        text="ü§ì –° –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º üò¢", callback_data="low_budget_movie"
    )
    button_4 = InlineKeyboardButton(
        text="üëÜ –° –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º üëç", callback_data="high_budget_movie"
    )
    button_5 = InlineKeyboardButton(text="üïë –ü–æ –≥–æ–¥–∞–º üïñ", callback_data="year")
    button_6 = InlineKeyboardButton(
        text="üíæ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ üíæ", callback_data="history"
    )
    keyboard.add(button_1, button_2, button_3, button_4, button_5, button_6)

    return keyboard


def keyboard_menu_or_reply(callback_text: str) -> InlineKeyboardMarkup:

    buttons_for_reply = {
        "movie_search": "üéû –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é üéû",
        "rating": "üìâ –ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É üìâ",
        "year": "üïë –ü–æ –≥–æ–¥–∞–º üïñ",
        "low_budget_movie": "ü§ì –° –Ω–∏–∑–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º üò¢",
        "high_budget_movie": "üëÜ –° –≤—ã—Å–æ–∫–∏–º –±—é–¥–∂–µ—Ç–æ–º üëç",
        "history": "üíæ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ üíæ"
    }
    text_button = buttons_for_reply[callback_text]
    keyboard = InlineKeyboardMarkup(row_width=3)

    button_1 = InlineKeyboardButton(text=text_button, callback_data=callback_text)
    button_2 = InlineKeyboardButton(
        text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è", callback_data="main_menu"
    )
    keyboard.add(button_1)
    keyboard.add(button_2)

    return keyboard


def keyboard_with_ratings() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    list_rating = [
        "5",
        "5 - 6",
        "5 - 7",
        "5 - 8",
        "5 - 9",
        "5 - 10",
        "6",
        "6 - 7",
        "6 - 8",
        "6 - 9",
        "6 - 10",
        "7",
        "7 - 8",
        "7 - 9",
        "7 - 10",
        "8",
        "8 - 9",
        "8 - 10",
        "9",
        "9 - 10",
        "10",
    ]

    keyboard = InlineKeyboardMarkup(row_width=7)
    buttons = [
        InlineKeyboardButton(text=rating, callback_data=rating)
        for rating in list_rating
    ]
    keyboard.add(*buttons)

    return keyboard


def keyboard_with_years() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–∏—Å–∫–∞ –∫–∏–Ω–æ"""
    keyboard = InlineKeyboardMarkup(row_width=7)

    buttons = [
        InlineKeyboardButton(text=year, callback_data=f"{str(year)}-year")
        for year in range(1980, 2025)
    ]
    keyboard.add(*buttons)

    return keyboard


def keyboard_with_get_value_limit() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–∏–º–∏—Ç–∞ –≤—ã–≤–æ–¥–∏–º—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ–¥ –∑–∞–ø—Ä–æ—Å"""
    keyboard = InlineKeyboardMarkup(row_width=5)

    buttons = [
        InlineKeyboardButton(text=digit, callback_data=digit) for digit in range(1, 16)
    ]
    keyboard.add(*buttons)

    return keyboard


def keyboard_by_genre() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞"""
    genres = {
        "–ê–Ω–∏–º–µ": "anime",
        "–ö–æ–º–µ–¥–∏—è": "comedy",
        "–î—Ä–∞–º–∞": "drama",
        "–ë–æ–µ–≤–∏–∫": "action",
        "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞": "sci-fi",
        "–£–∂–∞—Å—ã": "horror",
        "–¢—Ä–∏–ª–ª–µ—Ä": "thriller",
        "–ú–µ–ª–æ–¥—Ä–∞–º–∞": "romance",
        "–§—ç–Ω—Ç–µ–∑–∏": "fantasy",
        "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è": "adventure",
        "–ú—É–ª—å—Ç—Ñ–∏–ª—å–º": "animation",
        "–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π": "documentary",
        "–ö—Ä–∏–º–∏–Ω–∞–ª": "crime",
        "–í–µ—Å—Ç–µ—Ä–Ω": "western",
        "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π": "historical",
        "–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π": "musical",
        "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è": "biography",
        "–°–µ–º–µ–π–Ω—ã–π": "family",
        "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π": "sports",
        "–í–æ–µ–Ω–Ω—ã–π": "military",
    }

    keyboard = InlineKeyboardMarkup(row_width=4)
    buttons = [
        InlineKeyboardButton(text=genre, callback_data=genres[genre])
        for genre in genres
    ]
    button = InlineKeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É", callback_data='stop')
    keyboard.add(*buttons)
    keyboard.add(button)

    return keyboard


def menu_history(history_requests: list, current_page: int = 0) -> tuple:
    """ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–æ–≤ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤. """

    paginator = InlineKeyboardPaginator(
        page_count=len(history_requests),
        current_page=current_page,
        data_pattern='history_{page}'
    )

    paginator.add_before(
        InlineKeyboardButton(text="<<", callback_data='back_to_end'),
        InlineKeyboardButton(text="<", callback_data='back'),
        InlineKeyboardButton(text="-{}-".format(current_page+1), callback_data='current'),
        InlineKeyboardButton(text=">", callback_data='next'),
        InlineKeyboardButton(text=">>", callback_data='next_to_end')
    )

    return paginator.markup
